{"version":3,"file":"static/js/5219.0e45203d.chunk.js","mappings":"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","sources":["views/store/Stores.jsx"],"sourcesContent":["import React, { lazy, Component } from \"react\";\r\nimport { data } from \"../../data\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTh, faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from \"axios\";\r\nimport { apis } from \"../../components/API/api\";\r\nconst Paging = lazy(() => import(\"../../components/Paging\"));\r\nconst Breadcrumb = lazy(() => import(\"../../components/Breadcrumb\"));\r\nconst FilterCategory = lazy(() => import(\"../../components/filter/Category\"));\r\nconst FilterPrice = lazy(() => import(\"../../components/filter/Price\"));\r\nconst FilterSize = lazy(() => import(\"../../components/filter/Size\"));\r\nconst FilterStar = lazy(() => import(\"../../components/filter/Star\"));\r\nconst FilterColor = lazy(() => import(\"../../components/filter/Color\"));\r\nconst FilterTag = lazy(() => import(\"../../components/filter/Tag\"));\r\nconst FilterClear = lazy(() => import(\"../../components/filter/Clear\"));\r\nconst CardServices = lazy(() => import(\"../../components/card/CardServices\"));\r\nconst CardStore = lazy(() => import(\"../../components/card/CardStore\"));\r\nconst CardProductList = lazy(() =>\r\n  import(\"../../components/card/CardProductList\")\r\n);\r\n// import AddStore from \"./AddStore\";\r\nconst AddStore = lazy(() => import(\"./AddStore\"));\r\nclass Stores extends Component {\r\n  state = {\r\n    currentProducts: [],\r\n    currentPage: null,\r\n    totalPages: null,\r\n    totalItems: 0,\r\n    view: \"list\",\r\n    image: \"\",\r\n    imageURLs: \"\",\r\n  };\r\n  onSubmit = async (values) => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", values.name);\r\n    formData.append(\"bio\", values.Info);\r\n    formData.append(\"address\", values.address);\r\n    formData.append(\"image\", this.state.image);\r\n    //console.log(\"formData\", formData.image);\r\n    const tokenJson = localStorage.getItem(\"authTokens\");\r\n    const tokenClass = JSON.parse(tokenJson);\r\n    const token = tokenClass.access;\r\n    // //console.log(\"token\", token);\r\n\r\n    let config = {\r\n      method: \"post\", // changed from get to post\r\n      maxContentLength: Infinity, // changed from maxBodyLength to maxContentLength\r\n      url: apis[\"store\"][\"create\"],\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"multipart/form-data\", // added content type header\r\n      },\r\n      data: formData,\r\n    };\r\n\r\n    axios\r\n      .request(config)\r\n      .then((response) => {\r\n        this.onProductsChanged(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    const totalItems = this.getProducts().length;\r\n    this.setState({ totalItems });\r\n  }\r\n\r\n  onProductsChanged = (currentProducts) => {\r\n    this.setState({\r\n      currentProducts: [...this.state.currentProducts, currentProducts],\r\n    });\r\n  };\r\n\r\n  onProductsDeleted = (id) => {\r\n    const currentProducts = this.state.currentProducts.filter(\r\n      (product) => product.id !== id\r\n    );\r\n    this.setState({ currentProducts });\r\n  };\r\n\r\n  onPageChanged = async (page) => {\r\n    let products = this.getProducts();\r\n    // //console.log(\"products\", products)\r\n    // //console.log(\"page\", page)\r\n    const tokenJson = localStorage.getItem(\"authTokens\");\r\n    const tokenClass = JSON.parse(tokenJson);\r\n    const token = tokenClass.access;\r\n    // //console.log(\"token\", token);\r\n    let config = {\r\n      method: \"get\",\r\n      maxBodyLength: Infinity,\r\n      url: apis[\"store\"][\"list\"],\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      // data: data,\r\n    };\r\n\r\n    axios\r\n      .request(config)\r\n      .then((response) => {\r\n        products = response.data;\r\n        // //console.log(\"stores\",response.data);\r\n        const { currentPage, totalPages, pageLimit } = page;\r\n        const offset = (currentPage - 1) * pageLimit;\r\n        const currentProducts = products.slice(offset, offset + pageLimit);\r\n        // //console.log(\"currentProducts\", currentProducts);\r\n        this.setState({ currentPage, currentProducts, totalPages });\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  onChangeView = (view) => {\r\n    this.setState({ view });\r\n  };\r\n\r\n  onChangeImage = (image) => {\r\n    this.setState({ image });\r\n    //console.log(\"change image\", image);\r\n  };\r\n\r\n  getProducts = () => {\r\n    let products = data.products;\r\n    // let products = data.products;\r\n\r\n    const token = JSON.parse(localStorage.getItem(\"authTokens\")).access;\r\n    // //console.log(\"token\", token);\r\n    let config = {\r\n      method: \"get\",\r\n      maxBodyLength: Infinity,\r\n      // url: apis[\"product\"][\"list\"]+ this.props.param.id + '/',\r\n      url: apis[\"store\"][\"list\"],  \r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(config)\r\n      .then((response) => {\r\n        products = response.data;\r\n        products = products.data;\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n    return products;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <img src={\"http://141.11.107.63:8080/store_images/1_ULW0Mxk.jpg\"}/> */}\r\n        <div\r\n          className=\"p-5 bg-primary bs-cover\"\r\n          style={{\r\n            backgroundImage: \"url(../../images/banner/50-Banner.webp)\",\r\n          }}\r\n        >\r\n          <div className=\"container text-center\">\r\n            <span className=\"display-5 px-3 bg-white rounded shadow\">\r\n              Stores\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <Breadcrumb />\r\n        <div className=\"container-fluid mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">\r\n                  <span className=\"align-middle\">Add card</span>\r\n\r\n                  <AddStore\r\n                    onSubmit={this.onSubmit}\r\n                    onChangeImage={this.onChangeImage}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n              {/* <div className=\"row\">\r\n                <div className=\"col-7\">\r\n                  <span className=\"align-middle fw-bold\">\r\n                    {this.state.totalItems} results for{\" \"}\r\n                    <span className=\"text-warning\">\"t-shirts\"</span>\r\n                  </span>\r\n                </div>\r\n                <div className=\"col-5 d-flex justify-content-end\">\r\n                  <select\r\n                    className=\"form-select mw-180 float-start\"\r\n                    aria-label=\"Default select\"\r\n                  >\r\n                    <option value={1}>Most Popular</option>\r\n                    <option value={2}>Latest items</option>\r\n                    <option value={3}>Trending</option>\r\n                    <option value={4}>Price low to high</option>\r\n                    <option value={4}>Price high to low</option>\r\n                  </select>\r\n                  <div className=\"btn-group ms-3\" role=\"group\">\r\n                    <button\r\n                      aria-label=\"Grid\"\r\n                      type=\"button\"\r\n                      onClick={() => this.onChangeView(\"grid\")}\r\n                      className={`btn ${\r\n                        this.state.view === \"grid\"\r\n                          ? \"btn-primary\"\r\n                          : \"btn-outline-primary\"\r\n                      }`}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTh} />\r\n                    </button>\r\n                    <button\r\n                      aria-label=\"List\"\r\n                      type=\"button\"\r\n                      onClick={() => this.onChangeView(\"list\")}\r\n                      className={`btn ${\r\n                        this.state.view === \"list\"\r\n                          ? \"btn-primary\"\r\n                          : \"btn-outline-primary\"\r\n                      }`}\r\n                    >\r\n                      <FontAwesomeIcon icon={faBars} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n              <hr />\r\n              <div className=\"row g-3\">\r\n                {this.state.currentProducts.map((product, idx) => {\r\n                  return (\r\n                    <div key={idx} className=\"col-md-4\">\r\n                      <CardStore\r\n                        data={product}\r\n                        onProductsDeleted={this.onProductsDeleted}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n                {/* {this.state.view === \"list\" &&\r\n                  this.state.currentProducts.map((product, idx) => {\r\n                    return (\r\n                      <div key={idx} className=\"col-md-12\">\r\n                        <CardProductList data={product} />\r\n                      </div>\r\n                    );\r\n                  })} */}\r\n              </div>\r\n              <hr />\r\n              <Paging\r\n                totalRecords={this.state.totalItems}\r\n                pageLimit={9}\r\n                pageNeighbours={3}\r\n                onPageChanged={this.onPageChanged}\r\n                sizing=\"\"\r\n                alignment=\"justify-content-center\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stores;\r\n"],"names":["Paging","lazy","Breadcrumb","CardStore","AddStore","Stores","state","currentProducts","currentPage","totalPages","totalItems","view","image","imageURLs","onSubmit","values","formData","FormData","append","name","Info","address","tokenJson","localStorage","getItem","tokenClass","JSON","parse","token","access","config","method","maxContentLength","Infinity","url","apis","headers","Authorization","data","axios","then","response","onProductsChanged","catch","error","setState","onProductsDeleted","id","filter","product","onPageChanged","page","products","getProducts","maxBodyLength","pageLimit","offset","slice","onChangeView","onChangeImage","this","length","className","style","backgroundImage","map","idx","totalRecords","pageNeighbours","sizing","alignment","Component"],"sourceRoot":""}