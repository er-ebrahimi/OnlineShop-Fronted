{"version":3,"file":"static/js/5821.4c0fad4d.chunk.js","mappings":"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","sources":["components/filter/Price.jsx","helpers/validation.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { number } from \"../../helpers/validation\";\r\nimport { categoryFunc } from \"../../functions/CategoryFunc\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst FilterPrice = (props) => {\r\n  const navigate = useNavigate();\r\n  let numbers = [10, 20, 30, 40];\r\n  const [price, setPrice] = useState([10000, 0]);\r\n  const [checked1, setChecked1] = useState(false);\r\n  const [checked2, setChecked2] = useState(false);\r\n  const [checked3, setChecked3] = useState(false);\r\n  // const queryParams = new URLSearchParams(location.search);\r\n  // props.searchQuery = queryParams.get(\"type\");\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    choosePrice();\r\n  }, [checked1, checked2, checked3]);\r\n  useEffect(() => {\r\n    // choosePrice()\r\n    // //console.log(\"price\", price);\r\n    const queryParams = new URLSearchParams(location.search);\r\n    let temp = queryParams.get(\"type\");\r\n    if (price[1] === 0) {\r\n      navigate(`/product/category?type=${temp}`);\r\n      return;\r\n    }\r\n    props.setSearchQuery(temp);\r\n    navigate(\r\n      `/product/category?type=other&lower_price=${price[0]}&upper_price=${price[1]}`\r\n    );\r\n    // //console.log(\"searchQuery\", props.setSearchQuery);\r\n    props.setChanger(!props.change);\r\n    // //console.log(props.change);\r\n    // //console.log(\"search query changed\");\r\n  }, [price]);\r\n  const choosePrice = () => {\r\n    if (!checked1 && !checked2 && !checked3) {\r\n      setPrice([10000, 0]);\r\n      return;\r\n    }\r\n    let min = 10000;\r\n    let max = 0;\r\n    if (checked1) {\r\n      min = numbers[0];\r\n      max = numbers[1];\r\n      // //console.log(\"max1\", max)\r\n    }\r\n    if (checked2) {\r\n      min = numbers[1] < min ? numbers[1] : min;\r\n      max = numbers[2] > max ? numbers[2] : max;\r\n      // //console.log(2)\r\n    }\r\n    if (checked3) {\r\n      min = numbers[2] < min ? numbers[2] : min;\r\n      max = numbers[3] > max ? numbers[3] : max;\r\n      // //console.log(3)\r\n    }\r\n\r\n    setPrice([min, max]);\r\n  };\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div\r\n        className=\"card-header fw-bold text-uppercase accordion-icon-button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#filterPrice\"\r\n        aria-expanded=\"true\"\r\n        aria-controls=\"filterPrice\"\r\n      >\r\n        Price\r\n      </div>\r\n      <ul className=\"list-group list-group-flush show\" id=\"filterPrice\">\r\n        <li className=\"list-group-item\">\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexCheckDefault1\"\r\n              checked={checked1}\r\n              onChange={() => {\r\n                setChecked1(!checked1);\r\n              }}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexCheckDefault1\">\r\n              ${numbers[0]} - ${numbers[1]} <span className=\"text-muted\"></span>\r\n            </label>\r\n          </div>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexCheckDefault2\"\r\n              checked={checked2}\r\n              onChange={() => {\r\n                setChecked2(!checked2);\r\n              }}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexCheckDefault2\">\r\n              ${numbers[1]} - ${numbers[2]} <span className=\"text-muted\"></span>\r\n            </label>\r\n          </div>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexCheckDefault3\"\r\n              checked={checked3}\r\n              onChange={() => setChecked3(!checked3)}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexCheckDefault3\">\r\n              ${numbers[2]} - ${numbers[3]} <span className=\"text-muted\"></span>\r\n            </label>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterPrice;\r\n","export const required = (value) =>\r\n  value || (typeof value == \"number\" && value === 0)\r\n    ? undefined\r\n    : \"This field is required\";\r\nexport const number = (value) =>\r\n  value && isNaN(Number(value)) ? \"Must be a number\" : undefined;\r\nexport const digit = (value) =>\r\n  value && !/^[0-9]*$/.test(value) ? \"Must be a number\" : undefined;\r\nconst maxLength = (max) => (value) =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\nexport const maxLengthOTP = maxLength(6);\r\nexport const maxLengthMobileNo = maxLength(15);\r\nexport const maxLength20 = maxLength(20);\r\nexport const maxLength50 = maxLength(50);\r\nexport const maxLength150 = maxLength(150);\r\nexport const maxLength500 = maxLength(500);\r\nexport const maxLength1000 = maxLength(1000);\r\nexport const maxLength800 = maxLength(800);\r\nconst minLength = (min) => (value) =>\r\n  value && value.length < min ? `Must be ${min} characters or more` : undefined;\r\nexport const minLengthMobileNo = minLength(5);\r\nexport const minLengthOTP = minLength(6);\r\nexport const minLength8 = minLength(8);\r\nconst maxValue = (max) => (value) =>\r\n  value && value > max ? `Must be at least ${max} or less` : undefined;\r\nexport const maxValueMobile = maxValue(999999999999999);\r\nexport const maxValueAmount = maxValue(2147483647);\r\nexport const maxValue127 = maxValue(127);\r\nexport const maxValue9 = maxValue(9);\r\n\r\nconst minValue = (min) => (value) =>\r\n  value !== undefined && value !== null && value !== \"\" && value < min\r\n    ? `Must be at least ${min}`\r\n    : undefined;\r\nexport const minValueMobile = minValue(9999);\r\nexport const minValue10 = minValue(10);\r\nexport const minValue0 = minValue(0);\r\nexport const email = (value) =>\r\n  value && !/^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/i.test(value)\r\n    ? \"Invalid email address\"\r\n    : undefined;\r\nexport const name = (value) =>\r\n  value && !/^[a-zA-Z\\s]*$/i.test(value) ? \"Invalid name\" : undefined;\r\n  export const fName = (value) =>\r\n  value && !/^[a-zA-Z\\s]*$/i.test(value) ? \"Invalid father name\" : undefined;\r\n  export const mName = (value) =>\r\n  value && !/^[a-zA-Z\\s]*$/i.test(value) ? \"Invalid mother name\" : undefined;\r\nexport const isOverEighteen = (date) => {\r\n  let birthday = new Date(date);\r\n  // eslint-disable-next-line no-new-wrappers\r\n  let age = new Number(\r\n    (new Date().getTime() - birthday.getTime()) / 31536000000\r\n  ).toFixed(0);\r\n  if (age >= 18) {\r\n    return undefined;\r\n  }\r\n  return \"To successfully open an account you have to be at least 18 years old.\";\r\n};\r\n"],"names":["props","navigate","useNavigate","numbers","useState","price","setPrice","checked1","setChecked1","checked2","setChecked2","checked3","setChecked3","location","useLocation","useEffect","choosePrice","temp","URLSearchParams","search","get","setSearchQuery","setChanger","change","min","max","className","id","type","checked","onChange","htmlFor","required","value","undefined","digit","test","maxLength","length","maxLengthMobileNo","maxLength20","maxLength50","maxLength1000","minLength","minLengthMobileNo","minLength8","maxValue","minValue","email","name"],"sourceRoot":""}